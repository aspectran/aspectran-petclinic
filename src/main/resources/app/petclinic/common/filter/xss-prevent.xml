<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE aspectran PUBLIC "-//ASPECTRAN//DTD Aspectran 9.0//EN"
        "https://aspectran.com/dtd/aspectran-9.dtd">
<aspectran>

    <bean id="xssPreventionFilter" class="app.petclinic.common.filter.XSSPreventionFilter">
        <description>
            <![CDATA[
            // Avoid anything between script tags
            Pattern.compile("<script>(.*?)</script>", Pattern.CASE_INSENSITIVE),
            // Avoid anything in a src='...' type of expression
            Pattern.compile("src[\r\n]*=[\r\n]*\\\'(.*?)\\\'", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),
            Pattern.compile("src[\r\n]*=[\r\n]*\\\"(.*?)\\\"", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),
            // Remove any lonesome </script> tag
            Pattern.compile("</script>", Pattern.CASE_INSENSITIVE),
            // Remove any lonesome <script ...> tag
            Pattern.compile("<script(.*?)>", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),
            // Avoid eval(...) expressions
            Pattern.compile("eval\\((.*?)\\)", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),
            // Avoid expression(...) expressions
            Pattern.compile("expression\\((.*?)\\)", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL),
            // Avoid javascript:... expressions
            Pattern.compile("javascript:", Pattern.CASE_INSENSITIVE),
            // Avoid vbscript:... expressions
            Pattern.compile("vbscript:", Pattern.CASE_INSENSITIVE),
            // Avoid onload= expressions
            Pattern.compile("onload(.*?)=", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.DOTALL)
            ]]>
        </description>
        <properties>
            <item name="canonicalize" valueType="boolean">false</item>
            <item name="patterns">
                <![CDATA[
                {
                    pattern: <script>(.*?)</script>
                    caseInsensitive: true
                    multiline: false
                    dotall: false
                }
                {
                    pattern: src[\r\n]*=[\r\n]*\'(.*?)\'
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                {
                    pattern: src[\r\n]*=[\r\n]*\"(.*?)\"
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                {
                    pattern: </script>
                    caseInsensitive: true
                    multiline: false
                    dotall: false
                }
                {
                    pattern: <script(.*?)>
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                {
                    pattern: eval\((.*?)\)
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                {
                    pattern: expression\((.*?)\)
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                {
                    pattern: javascript:
                    caseInsensitive: true
                    multiline: false
                    dotall: false
                }
                {
                    pattern: vbscript:
                    caseInsensitive: true
                    multiline: false
                    dotall: false
                }
                {
                    pattern: onload(.*?)=
                    caseInsensitive: true
                    multiline: true
                    dotall: true
                }
                ]]>
            </item>
        </properties>
    </bean>

    <aspect id="xssPreventionAspect" order="0">
        <description>
            Specifies the environment variables used during request and response processing.
        </description>
        <joinpoint>
            pointcut: {
                +: /**
            }
        </joinpoint>
        <advice>
            <before>
                <action bean="xssPreventionFilter" method="filter"/>
            </before>
        </advice>
    </aspect>

</aspectran>
